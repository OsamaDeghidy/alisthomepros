# Generated by Django 5.2.5 on 2025-08-16 16:31

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contracts', '0006_contract_platform_commission_rate_and_more'),
        ('payments', '0005_remove_withdrawal_payment_method_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dispute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dispute_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('dispute_type', models.CharField(choices=[('payment', 'Payment Dispute'), ('quality', 'Quality Dispute'), ('delivery', 'Delivery Dispute'), ('communication', 'Communication Dispute'), ('contract_breach', 'Contract Breach'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_review', 'In Review'), ('resolved', 'Resolved'), ('escalated', 'Escalated'), ('closed', 'Closed')], default='open', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('disputed_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('refund_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('evidence_files', models.JSONField(blank=True, default=list)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('against', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes_against', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_disputes', to=settings.AUTH_USER_MODEL)),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='contracts.contract')),
                ('milestone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='contracts.contractmilestone')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='payments.payment')),
                ('raised_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes_raised', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disputes_resolved', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DisputeEvidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('evidence_type', models.CharField(choices=[('document', 'Document'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('screenshot', 'Screenshot'), ('contract', 'Contract'), ('communication', 'Communication'), ('other', 'Other')], max_length=20)),
                ('file_path', models.FileField(blank=True, null=True, upload_to='disputes/evidence/')),
                ('file_url', models.URLField(blank=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dispute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidence', to='disputes.dispute')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_evidence', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DisputeMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('message', 'Message'), ('evidence', 'Evidence'), ('resolution', 'Resolution'), ('system', 'System')], default='message', max_length=20)),
                ('content', models.TextField()),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('is_internal', models.BooleanField(default=False)),
                ('is_system_message', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dispute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='disputes.dispute')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispute_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='DisputeResolution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolution_type', models.CharField(choices=[('refund', 'Full Refund'), ('partial_refund', 'Partial Refund'), ('rework', 'Rework Required'), ('mediation', 'Mediation'), ('favor_client', 'Favor Client'), ('favor_professional', 'Favor Professional'), ('compromise', 'Compromise'), ('dismissed', 'Dismissed')], max_length=20)),
                ('resolution_summary', models.TextField()),
                ('resolution_details', models.TextField(blank=True)),
                ('refund_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('penalty_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('resolved_at', models.DateTimeField(auto_now_add=True)),
                ('is_implemented', models.BooleanField(default=False)),
                ('implementation_date', models.DateTimeField(blank=True, null=True)),
                ('implementation_notes', models.TextField(blank=True)),
                ('dispute', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resolution', to='disputes.dispute')),
                ('resolved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resolutions_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-resolved_at'],
            },
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['status', 'created_at'], name='disputes_di_status_edf3a9_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['raised_by', 'status'], name='disputes_di_raised__1384e4_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['against', 'status'], name='disputes_di_against_1c9f99_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['contract', 'status'], name='disputes_di_contrac_56ea0f_idx'),
        ),
    ]
